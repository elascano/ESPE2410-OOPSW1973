package ec.edu.espe.basicopetration.view;

import ec.edu.espe.basicopetration.controller.MongoDBManager;
import ec.edu.espe.basicopetration.model.Color;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author David Cuichan
 */
public class FrmListColorSale extends javax.swing.JFrame {

    private FrmColorSale frmColorSale;

    /**
     * Creates new form FrmListColorSale
     *
     * @param frmColorSale
     */
    public FrmListColorSale(FrmColorSale frmColorSale) {
        initComponents();
        chargeData();
        this.frmColorSale = frmColorSale;

        // Agregar un listener para la selección en la tabla
        tColorList.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting() && tColorList.getSelectedRow() != -1) {
                    // Obtener datos de la fila seleccionada
                    int selectedRow = tColorList.getSelectedRow();
                    String colorName = tColorList.getValueAt(selectedRow, 0).toString();
                    String colorId = tColorList.getValueAt(selectedRow, 1).toString();
                    String type = tColorList.getValueAt(selectedRow, 2).toString();
                    double price = Double.parseDouble(tColorList.getValueAt(selectedRow, 3).toString());
                    
                    // Enviar datos al formulario de venta
                    frmColorSale.addColorToSale(colorName, colorId, type, price);
                    
                    // Cerrar esta ventana después de seleccionar
                    dispose();
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lColorList = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tColorList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lColorList.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lColorList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lColorList.setText("Lista de Colores");

        tColorList.setAutoCreateRowSorter(true);
        tColorList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Color", "ID", "Tipo", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tColorList.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tColorList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lColorList, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lColorList)
                .addContainerGap(229, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(39, 39, 39)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chargeData() {
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tColorList.getModel();
        // Limpiar tabla
        model.setRowCount(0);

        // Obtener todos los colores de MongoDB
        List<Color> colors = MongoDBManager.getInstance().getAllColors();

        // Añadir a la tabla
        for (Color color : colors) {
            model.addRow(new Object[]{
                color.getColorId(),
                color.getColorName(),
                color.getType(),
                color.getPrice()
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmListColorSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmListColorSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmListColorSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmListColorSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmListColorSale(new FrmColorSale()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lColorList;
    private javax.swing.JTable tColorList;
    // End of variables declaration//GEN-END:variables
}
